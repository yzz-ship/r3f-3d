(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[228],{2006:(e,n,o)=>{Promise.resolve().then(o.bind(o,5460))},2660:(e,n,o)=>{"use strict";o.d(n,{zo:()=>v});var t=o(2115),r=o(3264),i=o(5355);let a=e=>e===Object(e)&&!Array.isArray(e)&&"function"!=typeof e;function v(e,n){let o=(0,i.A)(e=>e.gl),v=(0,i.F)(r.Tap,a(e)?Object.values(e):e);return(0,t.useLayoutEffect)(()=>{null==n||n(v)},[n]),(0,t.useEffect)(()=>{if("initTexture"in o){let e=[];Array.isArray(v)?e=v:v instanceof r.gPd?e=[v]:a(v)&&(e=Object.values(v)),e.forEach(e=>{e instanceof r.gPd&&o.initTexture(e)})}},[o,v]),(0,t.useMemo)(()=>{if(!a(e))return v;{let n={},o=0;for(let t in e)n[t]=v[o++];return n}},[e,v])}v.preload=e=>i.F.preload(r.Tap,e),v.clear=e=>i.F.clear(r.Tap,e)},5460:(e,n,o)=>{"use strict";o.r(n),o.d(n,{default:()=>f});var t=o(5155),r=o(2115),i=o(7558),a=o(4688),v=o(2660),l=o(897),c=o(3264),u=o(5355);function g(){let e=(0,r.useRef)();(0,v.zo)("".concat("/r3f-3d","/assets/textures/flag-french.jpg"));let n=!1,[o,i]=(0,r.useState)({uTime:0,uBigWaveSpeed:.75,uBigWaveElevation:.2,uBigWaveFrequency:new c.I9Y(4,1.5)});(0,r.useEffect)(()=>{let e=new l.cL;return e.add(a.uBigWaveSpeed,"value",0,4,.01).name("uBigWaveSpeed"),e.add(a.uBigWaveElevation,"value",0,1,.01).name("BigWaveElevation"),e.add(a.uBigWaveFrequency.value,"x",0,10,.01).name("BigWaveFrequency-x"),e.add(a.uBigWaveFrequency.value,"y",0,10,.01).name("BigWaveFrequency-y"),e.addColor(a.uDepthColor,"value").name("depthColor"),e.addColor(a.uSurfaceColor,"value").name("surfaceColor"),e.add(a.uColorOffset,"value",0,1,.01).name("uColorOffset"),e.add(a.uColorMultiplier,"value",0,1,.01).name("uColorMultiplier"),()=>e.destroy()},[]);let a=(0,r.useMemo)(()=>({uTime:{value:0},uBigWaveSpeed:{value:.75},uBigWaveElevation:{value:.2},uBigWaveFrequency:{value:new c.I9Y(4,1.5)},uDepthColor:{value:new c.Q1f("#186691")},uSurfaceColor:{value:new c.Q1f("#9bd8ff")},uColorOffset:{value:.08},uColorMultiplier:{value:5}}),[]);return(0,u.C)(o=>{n||(n=!0,console.log(e.current.geometry)),e.current.material.uniforms.uTime.value=o.clock.getElapsedTime()}),(0,t.jsx)(t.Fragment,{children:(0,t.jsxs)("mesh",{ref:e,"rotation-x":-Math.PI/2,children:[(0,t.jsx)("planeGeometry",{args:[2,2,128,128]}),(0,t.jsx)("shaderMaterial",{glslVersion:c.Wdf,vertexShader:"uniform float uTime;\nuniform float uBigWaveSpeed;\nuniform float uBigWaveElevation;\nuniform vec2 uBigWaveFrequency;\n\nout float vElevation;\n\nvec4 permute(vec4 x)\n{\n    return mod(((x*34.0)+1.0)*x, 289.0);\n}\nvec4 taylorInvSqrt(vec4 r)\n{\n    return 1.79284291400159 - 0.85373472095314 * r;\n}\nvec3 fade(vec3 t)\n{\n    return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\nfloat cnoise(vec3 P)\n{\n    vec3 Pi0 = floor(P); // Integer part for indexing\n    vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n    Pi0 = mod(Pi0, 289.0);\n    Pi1 = mod(Pi1, 289.0);\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n    vec4 iz0 = Pi0.zzzz;\n    vec4 iz1 = Pi1.zzzz;\n\n    vec4 ixy = permute(permute(ix) + iy);\n    vec4 ixy0 = permute(ixy + iz0);\n    vec4 ixy1 = permute(ixy + iz1);\n\n    vec4 gx0 = ixy0 / 7.0;\n    vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n    gx0 = fract(gx0);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n    vec4 sz0 = step(gz0, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n    vec4 gx1 = ixy1 / 7.0;\n    vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n    gx1 = fract(gx1);\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n    vec4 sz1 = step(gz1, vec4(0.0));\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 *= norm0.x;\n    g010 *= norm0.y;\n    g100 *= norm0.z;\n    g110 *= norm0.w;\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 *= norm1.x;\n    g011 *= norm1.y;\n    g101 *= norm1.z;\n    g111 *= norm1.w;\n\n    float n000 = dot(g000, Pf0);\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n    float n111 = dot(g111, Pf1);\n\n    vec3 fade_xyz = fade(Pf0);\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n    return 2.2 * n_xyz;\n}\n\nvoid main()\n{\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    float elevation = sin(modelPosition.x * uBigWaveFrequency.x + uTime * uBigWaveSpeed) * \n                      sin(modelPosition.z * uBigWaveFrequency.y + uTime * uBigWaveSpeed) * \n                      uBigWaveElevation;\n    \n    // elevation += cnoise(vec3(modelPosition.xz, uTime))\n\n    modelPosition.y += elevation;\n\n    vec4 viewPosition = viewMatrix * modelPosition; \n    vec4 projectionPosition = projectionMatrix * viewPosition;\n\n    gl_Position = projectionPosition;\n\n    vElevation = elevation;\n}\n",fragmentShader:"uniform vec3 uDepthColor;\nuniform vec3 uSurfaceColor;\nuniform float uColorOffset;\nuniform float uColorMultiplier;\n\nin float vElevation;\n\nout vec4 fragColor; \n\nvoid main()\n{\n    float mixStrength = (vElevation + uColorOffset) * uColorMultiplier;\n    vec3 mixColor = mix(uDepthColor, uSurfaceColor, mixStrength);\n    \n    fragColor = vec4(mixColor, 1.0);\n}\n",uniforms:a})]})})}function f(){return(0,t.jsxs)(i.Hl,{dpr:[1.5,2],fallback:(0,t.jsx)("div",{children:"Sorry no WebGL supported!"}),children:[(0,t.jsx)(a.N,{enableDamping:!0,dampingFactor:.05}),(0,t.jsx)(r.Suspense,{fallback:null,children:(0,t.jsx)(g,{})})]})}}},e=>{var n=n=>e(e.s=n);e.O(0,[1831,9367,8413,3562,4688,897,8441,1684,7358],()=>n(2006)),_N_E=e.O()}]);