(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[953],{2660:(e,r,n)=>{"use strict";n.d(r,{zo:()=>i});var t=n(2115),s=n(3264),a=n(5355);let o=e=>e===Object(e)&&!Array.isArray(e)&&"function"!=typeof e;function i(e,r){let n=(0,a.A)(e=>e.gl),i=(0,a.F)(s.Tap,o(e)?Object.values(e):e);return(0,t.useLayoutEffect)(()=>{null==r||r(i)},[r]),(0,t.useEffect)(()=>{if("initTexture"in n){let e=[];Array.isArray(i)?e=i:i instanceof s.gPd?e=[i]:o(i)&&(e=Object.values(i)),e.forEach(e=>{e instanceof s.gPd&&n.initTexture(e)})}},[n,i]),(0,t.useMemo)(()=>{if(!o(e))return i;{let r={},n=0;for(let t in e)r[t]=i[n++];return r}},[e,i])}i.preload=e=>a.F.preload(s.Tap,e),i.clear=e=>a.F.clear(s.Tap,e)},8863:(e,r,n)=>{Promise.resolve().then(n.bind(n,8939))},8939:(e,r,n)=>{"use strict";n.r(r),n.d(r,{default:()=>m});var t=n(5155),s=n(2115),a=n(7558),o=n(4688),i=n(5355),l=n(5377),u=n(2660),c=n(3264);function v(){let e="/r3f-3d",r=(0,s.useRef)(),{scene:n}=(0,i.A)(),a=(0,l.p)("".concat(e,"/assets/new/bakedModel.glb")),o=(0,u.zo)("".concat(e,"/assets/new/perlin.png"));return o.wrapS=c.GJx,o.wrapT=c.GJx,(0,s.useEffect)(()=>{a.scene.getObjectByName("baked").material.map.anisotropy=8,n.add(a.scene)},[]),(0,i.C)((e,n)=>{r.current&&(r.current.uniforms.uTime.value+=n)}),(0,t.jsx)(t.Fragment,{children:(0,t.jsxs)("mesh",{"position-y":4.83,translate:[0,.5,0],scale:[1.5,6,1.5],children:[(0,t.jsx)("planeGeometry",{args:[1,1,16,64]}),(0,t.jsx)("shaderMaterial",{ref:r,side:2,transparent:!0,depthWrite:!1,vertexShader:"uniform sampler2D uPerlinTexture;\r\nuniform float uTime;\r\n\r\nvarying vec2 vUv;\r\n\r\nvec2 rotate2D(vec2 value, float angle)\r\n{\r\n    float s = sin(angle);\r\n    float c = cos(angle);\r\n    mat2 m = mat2(c, s, -s, c);\r\n    return m * value;\r\n}\r\n\r\nvoid main() {\r\n    vec3 newPosition = position;\r\n\r\n    float twistPerlin = texture(\r\n        uPerlinTexture, \r\n        vec2(0.5, uv.y * 0.2 -  uTime * 0.005)\r\n    ).r;\r\n    float angle = twistPerlin * 10.0;\r\n    newPosition.xz = rotate2D(newPosition.xz, angle);\r\n\r\n    vec2 windOffset = vec2(\r\n        texture(uPerlinTexture, vec2(0.25, uTime * 0.1)).r - 0.5,\r\n        texture(uPerlinTexture, vec2(0.75, uTime * 0.1)).r - 0.5\r\n    );\r\n    windOffset *= pow(uv.y, 3.0) * 10.0;\r\n    newPosition.xz += windOffset;\r\n\r\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(newPosition, 1.0); \r\n\r\n    vUv = uv;\r\n}\r\n",fragmentShader:"uniform sampler2D uPerlinTexture;\r\nuniform float uTime;\r\n\r\nvarying vec2 vUv;\r\n\r\nvoid main() {\r\n    vec2 smokeUv = vUv;\r\n    smokeUv.x *= 0.5;\r\n    smokeUv.y *= 0.3;\r\n    smokeUv.y -= uTime * 0.03;\r\n\r\n    float smoke = texture(uPerlinTexture, smokeUv).r;\r\n\r\n    smoke = smoothstep(0.4, 1.0, smoke);\r\n\r\n    smoke *= smoothstep(0.0, 0.1, vUv.x);\r\n    smoke *= smoothstep(1.0, 0.9, vUv.x);\r\n    smoke *= smoothstep(0.0, 0.1, vUv.y);\r\n    smoke *= smoothstep(1.0, 0.4, vUv.y);\r\n\r\n    gl_FragColor = vec4(0.6, 0.3, 0.2, smoke);\r\n    // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\r\n    #include <tonemapping_fragment>\r\n    #include <colorspace_fragment>\r\n\r\n}\r\n",uniforms:{uTime:{value:0},uPerlinTexture:{value:o}}})]})})}function m(){return(0,t.jsxs)(a.Hl,{dpr:[1.5,2],fallback:(0,t.jsx)("div",{children:"Sorry no WebGL supported!"}),children:[(0,t.jsx)(o.N,{enableDamping:!0,dampingFactor:.05}),(0,t.jsx)(s.Suspense,{fallback:null,children:(0,t.jsx)(v,{})})]})}}},e=>{var r=r=>e(e.s=r);e.O(0,[1831,9367,8413,3562,4688,6176,5377,8441,1684,7358],()=>r(8863)),_N_E=e.O()}]);